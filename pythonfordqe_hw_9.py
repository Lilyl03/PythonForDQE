# -*- coding: utf-8 -*-
"""PythonForDQE_hw_8.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1i-wQMAQ6pT5goMqWRVMviM-1r3jXxoH1
"""

import xml.etree.ElementTree as ET
import os

class XmlRecordImporter:
    def __init__(self, file_path='input.xml', output_path='output.txt'):
        self.file_path = file_path
        self.output_path = output_path

    def process_file(self):
        if not os.path.exists(self.file_path):
            print(f"XML file {self.file_path} not found.")
            return

        tree = ET.parse(self.file_path)
        root = tree.getroot()

        for record in root.findall('record'):
            record_type = record.get('type')
            text = record.find('text').text

            if record_type == 'News':
                city = record.find('city').text
                News(text, city).publish(self.output_path)
            elif record_type == 'PrivateAd':
                expiration_date = record.find('expiration_date').text
                PrivateAd(text, expiration_date).publish(self.output_path)
            elif record_type == 'EventAnnouncement':
                event_date = record.find('event_date').text
                location = record.find('location').text
                EventAnnouncement(text, event_date, location).publish(self.output_path)
            else:
                print(f"Unknown record type in XML: {record_type}")

        # ðŸ”„ Refresh analytics
        analytics = TextAnalytics(self.output_path)
        analytics.generate_word_count_csv()
        analytics.generate_letter_stats_csv()

        os.remove(self.file_path)
        print(f"Processed and removed file: {self.file_path}")

XmlRecordImporter().process_file()