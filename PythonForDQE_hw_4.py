# -*- coding: utf-8 -*-
"""str_hw.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1i-wQMAQ6pT5goMqWRVMviM-1r3jXxoH1
"""

import random
import string
from functools import reduce

def generate_dict():
    num_keys = random.randint(1, len(string.ascii_lowercase))
    keys = random.sample(string.ascii_lowercase, num_keys)
    return {key: random.randint(0, 100) for key in keys}

def generate_dict_list():
    num_dicts = random.randint(2, 10)
    return [generate_dict() for _ in range(num_dicts)]

def merge_dicts(dict_list):
    result = {}

    for idx, d in enumerate(dict_list):
        for key, value in d.items():
            if key in result:
                # Keep max value and track which dict it came from
                existing_value, existing_idx = result[key]
                if value > existing_value:
                    result[key] = (value, idx)
            else:
                result[key] = (value, idx)

    final_dict = {}
    key_counts = {}

    for key, (value, idx) in result.items():
        # Count occurrences of key
        key_counts[key] = sum([key in d for d in dict_list])
        new_key = f"{key}_{idx}" if key_counts[key] > 1 else key
        final_dict[new_key] = value

    return final_dict

import re

raw_text = '''
  tHis iz your homeWork, copy these Text to variable.

  You NEED TO normalize it fROM letter CASEs point oF View. also, create one MORE senTENCE witH LAST WoRDS of each existING SENtence and add it to the END OF this Paragraph.

  it iZ misspeLLing here. fix“iZ” with correct “is”, but ONLY when it Iz a mistAKE.

  last iz TO calculate nuMber OF Whitespace characteRS in this Tex. caREFULL, not only Spaces, but ALL whitespaces. I got 87.
'''

def fix_iz(text):
    return text.lower().replace("iz","is")

def normalize_sentences(text):
    sentences = re.split(r'(?<=[.!?])\s+', text.strip())
    return [s.capitalize() for s in sentences if s]

def extract_last_words(sentences):
    last_words = [s.strip().split()[-1].strip('.,') for s in sentences]
    return ' '.join(last_words) + '.'

def count_whitespaces(text):
    return sum(1 for c in text if c.isspace())

def process_text(text):
    cleaned = fix_iz(text)
    normalized = normalize_sentences(cleaned)
    new_sentence = extract_last_words(normalized)
    normalized.append(new_sentence)
    whitespace_count = count_whitespaces(cleaned)

    final_text = '\n'.join(normalized)
    return final_text, whitespace_count