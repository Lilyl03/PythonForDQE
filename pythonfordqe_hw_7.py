# -*- coding: utf-8 -*-
"""PythonForDQE_hw_7.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1i-wQMAQ6pT5goMqWRVMviM-1r3jXxoH1
"""

import csv
import string
from collections import Counter

class TextAnalytics:
    def __init__(self, file_path='output.txt'):
        self.file_path = file_path
        self.text = self._load_text()

    def _load_text(self):
        with open(self.file_path, 'r') as f:
            return f.read()

    def generate_word_count_csv(self, csv_path='word_count.csv'):
        words = self.text.lower().split()
        clean_words = [word.strip(string.punctuation) for word in words if word.strip(string.punctuation)]
        word_counter = Counter(clean_words)

        with open(csv_path, 'w', newline='') as f:
            writer = csv.writer(f)
            writer.writerow(['word', 'count'])
            for word, count in word_counter.items():
                writer.writerow([word, count])

    def generate_letter_stats_csv(self, csv_path='letter_stats.csv'):
        all_letters = [char for char in self.text if char.isalpha()]
        letter_counter = Counter(all_letters)
        uppercase_counter = Counter([char for char in all_letters if char.isupper()])
        total_letters = sum(letter_counter.values())

        with open(csv_path, 'w', newline='') as f:
            writer = csv.writer(f)
            writer.writerow(['letter', 'count_all', 'count_uppercase', 'percentage'])
            for letter in sorted(set(char.lower() for char in all_letters)):
                lower = letter.lower()
                upper = letter.upper()
                count_all = letter_counter[lower] + letter_counter[upper]
                count_upper = uppercase_counter[upper]
                percentage = round((count_all / total_letters) * 100, 2)
                writer.writerow([letter, count_all, count_upper, f"{percentage}%"])

TextAnalytics().generate_word_count_csv()
TextAnalytics().generate_letter_stats_csv()